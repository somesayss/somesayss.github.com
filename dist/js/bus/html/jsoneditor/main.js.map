{"version":3,"sources":["webpack:///js/bus/html/jsoneditor/main.js","webpack:///webpack/bootstrap 9d698fd7aaeefe6649aa?5603*******","webpack:///./src/js/bus/html/jsoneditor/main.js","webpack:///./src/js/bus/html/jsoneditor/parseJsonSchema.js","webpack:///./src/js/bus/html/jsoneditor/parseHtmlJsonSchema.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","100","_interopRequireDefault","obj","__esModule","default","_parseJsonSchema","_parseJsonSchema2","_parseHtmlJsonSchema","_parseHtmlJsonSchema2","console","log","JSONEditor","document","getElementById","mode","modes","onError","err","alert","toString","onChange","$","html","101","main","jsonSchema","type","methodName","jsonSchemaMethod","jsonSchemaMethods","propMethod","propMethods","props","originJsonSchemaData","title","properties","name","age","location","city","items","lage","isSee","yilai","stringGet","numberGet","integerGet","booleanGet","objectGet","limit","map","val","key","arrayGet","102","str","each"],"mappings":"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","file":"js/bus/html/jsoneditor/main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(100);\n\n\n/***/ },\n\n/***/ 100:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _parseJsonSchema = __webpack_require__(101);\n\t\n\tvar _parseJsonSchema2 = _interopRequireDefault(_parseJsonSchema);\n\t\n\tvar _parseHtmlJsonSchema = __webpack_require__(102);\n\t\n\tvar _parseHtmlJsonSchema2 = _interopRequireDefault(_parseHtmlJsonSchema);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// 依赖\n\tconsole.log((0, _parseJsonSchema2.default)());\n\t\n\tnew JSONEditor(document.getElementById('jsoneditor'), {\n\t    mode: 'tree',\n\t    modes: ['code', 'tree'],\n\t    onError: function onError(err) {\n\t        alert(err.toString());\n\t    },\n\t    onChange: function onChange() {\n\t        console.log(123);\n\t    }\n\t}, (0, _parseJsonSchema2.default)());\n\t\n\t$('#jsonHtml').html((0, _parseHtmlJsonSchema2.default)());\n\n/***/ },\n\n/***/ 101:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar originJsonSchemaData = {\n\t    \"title\": \"person\",\n\t    \"type\": \"object\",\n\t    \"properties\": {\n\t        \"name\": {\n\t            \"type\": \"string\"\n\t        },\n\t        \"age\": {\n\t            \"type\": \"integer\"\n\t        },\n\t        \"location\": {\n\t            \"type\": \"object\",\n\t            \"properties\": {\n\t                \"city\": {\n\t                    \"type\": \"array\",\n\t                    \"items\": {\n\t                        \"type\": \"object\",\n\t                        \"properties\": {\n\t                            \"name\": {\n\t                                \"type\": \"string\"\n\t                            },\n\t                            \"lage\": {\n\t                                \"type\": \"string\"\n\t                            },\n\t                            \"isSee\": {\n\t                                \"type\": \"boolean\"\n\t                            },\n\t                            \"yilai\": {\n\t                                \"type\": \"array\",\n\t                                \"items\": {\n\t                                    \"type\": \"integer\"\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/*\n\t    {\n\t        name: \"a\",\n\t        age: 0,\n\t        location: {\n\t            city: [{\n\t                name: 'zhejiang',\n\t                lage: '1000',\n\t                isSee: true,\n\t                yilai: [1, 2, 3]\n\t            }, {\n\t                name: 'fujian',\n\t                lage: '1001',\n\t                isSee: false,\n\t                yilai: [4, 5, 6]\n\t            }],\n\t        }\n\t    }\n\t*/\n\t\n\tvar jsonSchemaMethods = {\n\t    stringGet: function stringGet() {\n\t        return '';\n\t    },\n\t    numberGet: function numberGet() {\n\t        return 0;\n\t    },\n\t    integerGet: function integerGet() {\n\t        return 0;\n\t    },\n\t    booleanGet: function booleanGet() {\n\t        return true;\n\t    },\n\t    objectGet: function objectGet(props) {\n\t        return limit.map(props, function (val, key) {\n\t            return main(val);\n\t        });\n\t    },\n\t    arrayGet: function arrayGet(items) {\n\t        return [main(items)];\n\t    }\n\t};\n\t\n\tvar propMethods = {\n\t    objectGet: function objectGet(jsonSchema) {\n\t        return jsonSchema.properties;\n\t    },\n\t    arrayGet: function arrayGet(jsonSchema) {\n\t        return jsonSchema.items;\n\t    }\n\t};\n\t\n\tfunction main(jsonSchema) {\n\t    var type = jsonSchema.type;\n\t    var methodName = type + \"Get\";\n\t    var jsonSchemaMethod = jsonSchemaMethods[methodName];\n\t    if (jsonSchemaMethod) {\n\t        var propMethod = propMethods[methodName];\n\t        var props = null;\n\t        if (propMethod) {\n\t            props = propMethod(jsonSchema);\n\t        }\n\t        return jsonSchemaMethod(props);\n\t    };\n\t};\n\t\n\tmodule.exports = function () {\n\t    return main(originJsonSchemaData);\n\t};\n\n/***/ },\n\n/***/ 102:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar originJsonSchemaData = {\n\t    \"title\": \"person\",\n\t    \"type\": \"object\",\n\t    \"properties\": {\n\t        \"name\": {\n\t            \"type\": \"string\"\n\t        },\n\t        \"age\": {\n\t            \"type\": \"integer\"\n\t        },\n\t        \"location\": {\n\t            \"type\": \"object\",\n\t            \"properties\": {\n\t                \"city\": {\n\t                    \"type\": \"array\",\n\t                    \"items\": {\n\t                        \"type\": \"object\",\n\t                        \"properties\": {\n\t                            \"name\": {\n\t                                \"type\": \"string\"\n\t                            },\n\t                            \"lage\": {\n\t                                \"type\": \"string\"\n\t                            },\n\t                            \"isSee\": {\n\t                                \"type\": \"boolean\"\n\t                            },\n\t                            \"yilai\": {\n\t                                \"type\": \"array\",\n\t                                \"items\": {\n\t                                    \"type\": \"integer\"\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t/*\n\t    {\n\t        name: \"a\",\n\t        age: 0,\n\t        location: {\n\t            city: [{\n\t                name: 'zhejiang',\n\t                lage: '1000',\n\t                isSee: true,\n\t                yilai: [1, 2, 3]\n\t            }, {\n\t                name: 'fujian',\n\t                lage: '1001',\n\t                isSee: false,\n\t                yilai: [4, 5, 6]\n\t            }],\n\t        }\n\t    }\n\t*/\n\t\n\tvar jsonSchemaMethods = {\n\t    stringGet: function stringGet(props, key) {\n\t        return \"<div>string (\" + key + \")</div>\";\n\t    },\n\t    numberGet: function numberGet(props, key) {\n\t        return \"<div>number (\" + key + \")</div>\";\n\t    },\n\t    integerGet: function integerGet(props, key) {\n\t        return \"<div>integer (\" + key + \")</div>\";\n\t    },\n\t    booleanGet: function booleanGet(props, key) {\n\t        return \"<div>boolean (\" + key + \")</div>\";\n\t    },\n\t    objectGet: function objectGet(props, key) {\n\t        var str = '';\n\t        limit.each(props, function (val, key) {\n\t            str += main(val, key);\n\t        });\n\t        return \"\\n            <div>\\n                object (\" + key + \")\\n                \" + str + \"\\n            </div>\\n        \";\n\t    },\n\t    arrayGet: function arrayGet(props, key) {\n\t        return \"\\n            <div>\\n                array (\" + key + \")\\n                \" + main(props, '0') + \"\\n            </div>\\n        \";\n\t    }\n\t};\n\t\n\tvar propMethods = {\n\t    objectGet: function objectGet(jsonSchema) {\n\t        return jsonSchema.properties;\n\t    },\n\t    arrayGet: function arrayGet(jsonSchema) {\n\t        return jsonSchema.items;\n\t    }\n\t};\n\t\n\tfunction main(jsonSchema, key) {\n\t    var type = jsonSchema.type;\n\t    var methodName = type + \"Get\";\n\t    var jsonSchemaMethod = jsonSchemaMethods[methodName];\n\t    if (jsonSchemaMethod) {\n\t        var propMethod = propMethods[methodName];\n\t        var props = null;\n\t        if (propMethod) {\n\t            props = propMethod(jsonSchema);\n\t        };\n\t        return jsonSchemaMethod(props, key);\n\t    };\n\t};\n\t\n\tmodule.exports = function () {\n\t    return main(originJsonSchemaData, '请求参数');\n\t};\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** js/bus/html/jsoneditor/main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9d698fd7aaeefe6649aa\n **/","\n// 依赖\nimport parseJsonSchema from './parseJsonSchema';\nimport parseHtmlJsonSchema from './parseHtmlJsonSchema';\n\nconsole.log( parseJsonSchema() );\n\nnew JSONEditor(\n    document.getElementById('jsoneditor'), {\n        mode: 'tree',\n        modes: ['code', 'tree'],\n        onError: function (err) {\n            alert(err.toString());\n        },\n        onChange(){\n            console.log(123);\n        }\n    }, parseJsonSchema()\n);\n\n$('#jsonHtml').html( parseHtmlJsonSchema() );\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/bus/html/jsoneditor/main.js\n **/","\nconst originJsonSchemaData = {\n    \"title\": \"person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"age\": {\n            \"type\": \"integer\"\n        },\n        \"location\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"city\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                            },\n                            \"lage\": {\n                                \"type\": \"string\"\n                            },\n                            \"isSee\": {\n                                \"type\": \"boolean\"\n                            },\n                            \"yilai\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n\n/*\n    {\n        name: \"a\",\n        age: 0,\n        location: {\n            city: [{\n                name: 'zhejiang',\n                lage: '1000',\n                isSee: true,\n                yilai: [1, 2, 3]\n            }, {\n                name: 'fujian',\n                lage: '1001',\n                isSee: false,\n                yilai: [4, 5, 6]\n            }],\n        }\n    }\n*/\n\n\nconst jsonSchemaMethods = {\n    stringGet(){\n        return '';\n    },\n    numberGet(){\n        return 0;\n    },\n    integerGet(){\n        return 0;\n    },\n    booleanGet(){\n        return true;\n    },\n    objectGet(props){\n        return limit.map(props, (val, key) => {\n            return main(val);\n        });\n    },\n    arrayGet(items){\n        return [main(items)];\n    }\n};\n\nconst propMethods = {\n    objectGet(jsonSchema){\n        return jsonSchema.properties;\n    },\n    arrayGet(jsonSchema){\n        return jsonSchema.items;\n    }\n};\n\nfunction main(jsonSchema){\n    let type = jsonSchema.type;\n    let methodName = `${type}Get`;\n    let jsonSchemaMethod = jsonSchemaMethods[methodName];\n    if( jsonSchemaMethod ){\n        let propMethod = propMethods[methodName];\n        let props = null;\n        if( propMethod ){\n            props = propMethod(jsonSchema);\n        }\n        return jsonSchemaMethod( props );\n    };\n};\n\nmodule.exports = () => {\n    return main(originJsonSchemaData);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/bus/html/jsoneditor/parseJsonSchema.js\n **/","\nconst originJsonSchemaData = {\n    \"title\": \"person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"age\": {\n            \"type\": \"integer\"\n        },\n        \"location\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"city\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                            },\n                            \"lage\": {\n                                \"type\": \"string\"\n                            },\n                            \"isSee\": {\n                                \"type\": \"boolean\"\n                            },\n                            \"yilai\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n\n/*\n    {\n        name: \"a\",\n        age: 0,\n        location: {\n            city: [{\n                name: 'zhejiang',\n                lage: '1000',\n                isSee: true,\n                yilai: [1, 2, 3]\n            }, {\n                name: 'fujian',\n                lage: '1001',\n                isSee: false,\n                yilai: [4, 5, 6]\n            }],\n        }\n    }\n*/\n\n\nconst jsonSchemaMethods = {\n    stringGet(props, key){\n        return `<div>string (${key})</div>`;\n    },\n    numberGet(props, key){\n        return `<div>number (${key})</div>`;\n    },\n    integerGet(props, key){\n        return `<div>integer (${key})</div>`;\n    },\n    booleanGet(props, key){\n        return `<div>boolean (${key})</div>`;\n    },\n    objectGet(props, key){\n        let str = '';\n        limit.each(props, (val, key) => {\n            str += main(val, key);\n        });\n        return `\n            <div>\n                object (${key})\n                ${str}\n            </div>\n        `;\n    },\n    arrayGet(props, key){\n        return `\n            <div>\n                array (${key})\n                ${main(props, '0')}\n            </div>\n        `;\n    }\n};\n\nconst propMethods = {\n    objectGet(jsonSchema){\n        return jsonSchema.properties;\n    },\n    arrayGet(jsonSchema){\n        return jsonSchema.items;\n    }\n};\n\nfunction main(jsonSchema, key){\n    let type = jsonSchema.type;\n    let methodName = `${type}Get`;\n    let jsonSchemaMethod = jsonSchemaMethods[methodName];\n    if( jsonSchemaMethod ){\n        let propMethod = propMethods[methodName];\n        let props = null;\n        if( propMethod ){\n            props = propMethod(jsonSchema);\n        };\n        return jsonSchemaMethod( props, key );\n    };\n};\n\nmodule.exports = () => {\n    return main(originJsonSchemaData, '请求参数');\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/bus/html/jsoneditor/parseHtmlJsonSchema.js\n **/"],"sourceRoot":""}