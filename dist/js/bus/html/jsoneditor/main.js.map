{"version":3,"sources":["webpack:///webpack/bootstrap c6a245eb8f1de83e43ec","webpack:///./src/js/bus/html/jsoneditor/main.js","webpack:///./src/js/bus/html/jsoneditor/parseJsonSchema.js","webpack:///./src/js/bus/html/jsoneditor/parseHtmlJsonSchema.js"],"names":["console","log","JSONEditor","document","getElementById","mode","modes","onError","err","alert","toString","onChange","$","html","originJsonSchemaData","jsonSchemaMethods","stringGet","numberGet","integerGet","booleanGet","objectGet","props","limit","map","val","key","main","arrayGet","items","propMethods","jsonSchema","properties","type","methodName","jsonSchemaMethod","propMethod","module","exports","str","each"],"mappings":"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","file":"js/bus/html/jsoneditor/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c6a245eb8f1de83e43ec\n **/","\n// 依赖\nimport parseJsonSchema from './parseJsonSchema';\nimport parseHtmlJsonSchema from './parseHtmlJsonSchema';\n\nconsole.log( parseJsonSchema() );\n\nnew JSONEditor(\n    document.getElementById('jsoneditor'), {\n        mode: 'tree',\n        modes: ['code', 'tree'],\n        onError: function (err) {\n            alert(err.toString());\n        },\n        onChange(){\n            console.log(123);\n        }\n    }, parseJsonSchema()\n);\n\n$('#jsonHtml').html( parseHtmlJsonSchema() );\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/bus/html/jsoneditor/main.js\n **/","\nconst originJsonSchemaData = {\n    \"title\": \"person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"age\": {\n            \"type\": \"integer\"\n        },\n        \"location\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"city\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                            },\n                            \"lage\": {\n                                \"type\": \"string\"\n                            },\n                            \"isSee\": {\n                                \"type\": \"boolean\"\n                            },\n                            \"yilai\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n\n/*\n    {\n        name: \"a\",\n        age: 0,\n        location: {\n            city: [{\n                name: 'zhejiang',\n                lage: '1000',\n                isSee: true,\n                yilai: [1, 2, 3]\n            }, {\n                name: 'fujian',\n                lage: '1001',\n                isSee: false,\n                yilai: [4, 5, 6]\n            }],\n        }\n    }\n*/\n\n\nconst jsonSchemaMethods = {\n    stringGet(){\n        return '';\n    },\n    numberGet(){\n        return 0;\n    },\n    integerGet(){\n        return 0;\n    },\n    booleanGet(){\n        return true;\n    },\n    objectGet(props){\n        return limit.map(props, (val, key) => {\n            return main(val);\n        });\n    },\n    arrayGet(items){\n        return [main(items)];\n    }\n};\n\nconst propMethods = {\n    objectGet(jsonSchema){\n        return jsonSchema.properties;\n    },\n    arrayGet(jsonSchema){\n        return jsonSchema.items;\n    }\n};\n\nfunction main(jsonSchema){\n    let type = jsonSchema.type;\n    let methodName = `${type}Get`;\n    let jsonSchemaMethod = jsonSchemaMethods[methodName];\n    if( jsonSchemaMethod ){\n        let propMethod = propMethods[methodName];\n        let props = null;\n        if( propMethod ){\n            props = propMethod(jsonSchema);\n        }\n        return jsonSchemaMethod( props );\n    };\n};\n\nmodule.exports = () => {\n    return main(originJsonSchemaData);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/bus/html/jsoneditor/parseJsonSchema.js\n **/","\nconst originJsonSchemaData = {\n    \"title\": \"person\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"age\": {\n            \"type\": \"integer\"\n        },\n        \"location\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"city\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                            },\n                            \"lage\": {\n                                \"type\": \"string\"\n                            },\n                            \"isSee\": {\n                                \"type\": \"boolean\"\n                            },\n                            \"yilai\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"integer\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n\n/*\n    {\n        name: \"a\",\n        age: 0,\n        location: {\n            city: [{\n                name: 'zhejiang',\n                lage: '1000',\n                isSee: true,\n                yilai: [1, 2, 3]\n            }, {\n                name: 'fujian',\n                lage: '1001',\n                isSee: false,\n                yilai: [4, 5, 6]\n            }],\n        }\n    }\n*/\n\n\nconst jsonSchemaMethods = {\n    stringGet(props, key){\n        return `<div>string (${key})</div>`;\n    },\n    numberGet(props, key){\n        return `<div>number (${key})</div>`;\n    },\n    integerGet(props, key){\n        return `<div>integer (${key})</div>`;\n    },\n    booleanGet(props, key){\n        return `<div>boolean (${key})</div>`;\n    },\n    objectGet(props, key){\n        let str = '';\n        limit.each(props, (val, key) => {\n            str += main(val, key);\n        });\n        return `\n            <div>\n                object (${key})\n                ${str}\n            </div>\n        `;\n    },\n    arrayGet(props, key){\n        return `\n            <div>\n                array (${key})\n                ${main(props, '0')}\n            </div>\n        `;\n    }\n};\n\nconst propMethods = {\n    objectGet(jsonSchema){\n        return jsonSchema.properties;\n    },\n    arrayGet(jsonSchema){\n        return jsonSchema.items;\n    }\n};\n\nfunction main(jsonSchema, key){\n    let type = jsonSchema.type;\n    let methodName = `${type}Get`;\n    let jsonSchemaMethod = jsonSchemaMethods[methodName];\n    if( jsonSchemaMethod ){\n        let propMethod = propMethods[methodName];\n        let props = null;\n        if( propMethod ){\n            props = propMethod(jsonSchema);\n        };\n        return jsonSchemaMethod( props, key );\n    };\n};\n\nmodule.exports = () => {\n    return main(originJsonSchemaData, '请求参数');\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/bus/html/jsoneditor/parseHtmlJsonSchema.js\n **/"],"sourceRoot":""}